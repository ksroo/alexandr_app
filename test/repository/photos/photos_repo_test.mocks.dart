// Mocks generated by Mockito 5.3.2 from annotations
// in alexandr_test_app/test/repository/photos/photos_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:alexandr_test_app/app/model/photos_model.dart' as _i5;
import 'package:alexandr_test_app/app/services/api_services.dart' as _i2;
import 'package:alexandr_test_app/repository/photos/photos_api.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiServices_0 extends _i1.SmartFake implements _i2.ApiServices {
  _FakeApiServices_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PhotosApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockPhotosApi extends _i1.Mock implements _i3.PhotosApi {
  @override
  _i2.ApiServices get api => (super.noSuchMethod(
        Invocation.getter(#api),
        returnValue: _FakeApiServices_0(
          this,
          Invocation.getter(#api),
        ),
        returnValueForMissingStub: _FakeApiServices_0(
          this,
          Invocation.getter(#api),
        ),
      ) as _i2.ApiServices);
  @override
  _i4.Future<List<_i5.PhotosModel>> getPhotos() => (super.noSuchMethod(
        Invocation.method(
          #getPhotos,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.PhotosModel>>.value(<_i5.PhotosModel>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.PhotosModel>>.value(<_i5.PhotosModel>[]),
      ) as _i4.Future<List<_i5.PhotosModel>>);
}
